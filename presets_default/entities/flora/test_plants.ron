[ // Start from vector that contains entities.
	EntityData(
		// TODO: move comments to doc, and link a reference here.
		//// Codename is also used to match for locale strings.
		//// Name, descriptions - it all goes into locales.
		entity_codename : "grass_dandelion",
		entity_type : Plant(
			PlantProperties(
				//// Plant level defines the location of the plant.
				//// Valid options are: TallCanopy, MediumCanopy,
				//// ShortCanopy, Shrub, Ground, Underground,
				//// Underwater.
				plant_level: Ground,
				//// Plants be described as "patches" or "groups"
				//// of population individuals at given place, so
				//// a quantity parameter is given.
				//u16
				local_max_quantity: 200,
				//// Native biomes is a list which contains biomes codenames
				//// in which given plant appears.
				// TODO: link the list to docs.
				// The rarity or scarcity of the plant (group, patch) affects its
				// chance to be generated. From 0 to 100
				// u8
				// TODO: make a sanity check here?
				scarcity: 50,
				
				// young_plants_ratio - number of local plants reserved for
				// saplings. This will smooth out the lack of age property of
				// plants, and so with increase in quantity after this threshold
				// we can treat that ampunt of plants as mature.
				
				plant_components: 
					PlantComponent(
						component: Root,
						quantity: Single,
						material: Fiber,
						child_components: Components(
							[ // On root.
								PlantComponent(
									component: Stem,
									quantity: Few,
									material: Fiber,
									child_components: Components(
										[ // On stem.
											PlantComponent(
												component: Flower,
												quantity: Single,
												material: Fiber,
												child_components: None,
											),
										]
									),
								),
								// On root.
								PlantComponent(
									component: Leaf,
									quantity: Many,
									material: Fiber,
									child_components: None,
								),
							]
						),
					),
					
				native_biomes: [
					"test_invalid_biome", // Made to raise a warning.
					"biome_boreal_grassland",
					"biome_temperate_grassland",
					"biome_tropical_grassland",
					"biome_boreal_woodland",
					"biome_temperate_woodland",
					"biome_tropical_woodland",
					"biome_boreal_forest",
					"biome_temperate_forest",
					"biome_tropical_forest",
					"biome_boreal_swamp",
					"biome_temperate_swamp",
					"biome_tropical_swamp",
					"biome_boreal_shrubland",
					"biome_temperate_shrubland",
					"biome_tropical_shrubland",
					"biome_boreal_alpine_grassland",
					"biome_temperate_alpine_grassland",
					"biome_tropical_alpine_grassland",
				],
			)
		)
	),
	
	EntityData(
		entity_codename : "grass_barley",
		entity_type : Plant(
			PlantProperties(
				plant_level: Ground,
				local_max_quantity: 10000,
				scarcity: 10,
				
				plant_components: 
					PlantComponent(
						component: Root,
						quantity: Single,
						material: Fiber,
						child_components: Components(
							[ /////////////////////////
								PlantComponent(
									component: Stem,
									quantity: Single,
									material: Fiber,
									child_components: None,
								),
								PlantComponent(
									component: Leaf,
									quantity: Few,
									material: Fiber,
									child_components: None,
								),
							] /////////////////////////
						),
					),

				native_biomes: [
					"biome_temperate_grassland",
					"biome_tropical_grassland",
					"biome_boreal_woodland",
					"biome_temperate_woodland",
					"biome_tropical_woodland",
					"biome_boreal_shrubland",
					"biome_temperate_shrubland",
					"biome_tropical_shrubland",
				],
			)
		)
	),
	// Duplicate which should be discarded at worldgen.
	EntityData(
		entity_codename : "grass_foxtail",
		entity_type : Plant(
			PlantProperties(
				plant_level: Ground,
				local_max_quantity: 10000,
				scarcity: 80,
				
				plant_components: 
					PlantComponent(
						component: Root,
						quantity: Single,
						material: Fiber,
						child_components: Components(
							[ /////////////////////////
								PlantComponent(
									component: Stem,
									quantity: Single,
									material: Fiber,
									child_components: None,
								),
								PlantComponent(
									component: Leaf,
									quantity: Few,
									material: Fiber,
									child_components: None,
								),
							] /////////////////////////
						),
					),
					
				native_biomes: [
					"biome_boreal_grassland",
					"biome_temperate_grassland",
					"biome_tropical_grassland",
					"biome_boreal_woodland",
					"biome_temperate_woodland",
					"biome_tropical_woodland",
					"biome_boreal_forest",
					"biome_temperate_forest",
					"biome_tropical_forest",
					"biome_boreal_swamp",
					"biome_temperate_swamp",
					"biome_tropical_swamp",
					"biome_boreal_shrubland",
					"biome_temperate_shrubland",
					"biome_tropical_shrubland",
					"biome_boreal_alpine_grassland",
					"biome_temperate_alpine_grassland",
					"biome_tropical_alpine_grassland",
				],
			)
		)
	),
] // End with vector that contains entities.
